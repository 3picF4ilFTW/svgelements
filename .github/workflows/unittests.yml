name: Unittest

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 23 * * 5'

concurrency:
  group: unittests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unittests:

    name: ${{ matrix.os }}+py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        python-version: [3.9]
        experimental: [false]
        include:
          - os: ubuntu-18.04
            python-version: 3.6
            experimental: false
          - os: ubuntu-18.04
            python-version: '~3.10'
            experimental: true
          - os: macos-11
            python-version: 3.9
            experimental: false

    steps:

    - name: Checkout ${{ github.ref }}
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get detailed Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Python Cache - ${{ matrix.os }}-python-${{ steps.full-python-version.outputs.version }}
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ matrix.os }}-python-${{ steps.full-python-version.outputs.version }}

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade --upgrade-strategy eager pip setuptools wheel babel
        pip install --upgrade --upgrade-strategy eager scipy>=1.7.1 numpy

    - name: Run Unittests
      shell: bash
      run: |
        python -m unittest discover test -v
        if ${{ matrix.experimental }} == true; then
            exit 0
        fi
